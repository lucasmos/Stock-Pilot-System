{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { generateProductImage as generateProductImageFlow, type GenerateProductImageInput } from '@/ai/flows/product-image-generation';\nimport type { Product, Sale, Purchase, User, UserRole } from './types';\nimport { mockProducts, mockSales, mockPurchases, mockUsers } from './data'; // For simulating data ops\nimport { initiateStkPush } from '@/services/safaricom';\nimport { initiateAirtelMoneyTransaction } from '@/services/airtel-money';\n\n// Schema for adding a product\nconst AddProductSchema = z.object({\n  name: z.string().min(3, \"Product name must be at least 3 characters\"),\n  description: z.string().optional(),\n  price: z.coerce.number().positive(\"Price must be a positive number\"),\n  quantityInStock: z.coerce.number().int().nonnegative(\"Quantity must be a non-negative integer\"),\n  category: z.string().optional(),\n  supplier: z.string().optional(),\n  imageUrl: z.string().url(\"Invalid image URL\").optional().or(z.literal('')),\n});\n\nexport async function addProduct(formData: FormData) {\n  const rawData = Object.fromEntries(formData.entries());\n  const validatedFields = AddProductSchema.safeParse(rawData);\n\n  if (!validatedFields.success) {\n    console.error(\"Validation errors:\", validatedFields.error.flatten().fieldErrors);\n    return {\n      error: \"Invalid fields. Please check the data and try again.\",\n      details: validatedFields.error.flatten().fieldErrors,\n    };\n  }\n  \n  const newProductData = validatedFields.data;\n  if (newProductData.imageUrl === '') {\n    delete newProductData.imageUrl; // Remove if empty string so it becomes undefined\n  }\n\n  const newProduct: Product = {\n    id: `prod_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`, // More unique ID\n    ...newProductData,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  };\n\n  mockProducts.unshift(newProduct); // Add to the beginning for visibility\n  console.log(\"Added new product:\", newProduct);\n\n  return { success: \"Product added successfully!\", product: newProduct };\n}\n\nexport async function addProductsFromExcel(formData: FormData) {\n  const file = formData.get('excelFile') as File;\n\n  if (!file) {\n    return { error: \"No Excel file provided.\" };\n  }\n\n  console.log(\"Received Excel file:\", file.name, \"Size:\", file.size);\n\n  // ** SIMULATION ONLY **\n  // In a real application, you would use a library like 'xlsx' or 'SheetJS' here to:\n  // 1. Read the file buffer: `await file.arrayBuffer()`\n  // 2. Parse the Excel data from the buffer.\n  // 3. Iterate over rows and validate each product using AddProductSchema.\n  // 4. Collect valid products and any errors.\n\n  // For demonstration, let's simulate adding a couple of products\n  const simulatedParsedProducts = [\n    { name: \"Excel Product A\", price: 19.99, quantityInStock: 150, category: \"Excel Uploads\", description: \"Added via Excel\" },\n    { name: \"Excel Product B\", price: 29.99, quantityInStock: 75, category: \"Excel Uploads\", description: \"Another one via Excel\" },\n  ];\n\n  let addedCount = 0;\n  for (const prodData of simulatedParsedProducts) {\n    const validatedFields = AddProductSchema.safeParse(prodData);\n    if (validatedFields.success) {\n      const newProduct: Product = {\n        id: `prod_excel_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`,\n        ...validatedFields.data,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      mockProducts.unshift(newProduct);\n      addedCount++;\n    } else {\n      console.warn(\"Skipping invalid product from Excel (simulated):\", prodData, validatedFields.error.flatten().fieldErrors);\n    }\n  }\n\n  if (addedCount > 0) {\n    return { success: true, message: `Successfully processed Excel file. ${addedCount} products added (simulated). Actual Excel parsing requires a library.` };\n  } else {\n    return { error: \"No valid products found in Excel file (simulated). Actual Excel parsing requires a library.\" };\n  }\n}\n\n\nexport async function getProducts(): Promise<Product[]> {\n  await new Promise(resolve => setTimeout(resolve, 500)); // Simulate network delay\n  return Promise.resolve([...mockProducts]); // Return a copy to avoid direct mutation issues in components\n}\n\nexport async function getSales(dateRange?: { from: Date, to: Date }): Promise<Sale[]> {\n  console.log(\"Fetching sales, date range:\", dateRange);\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  let filteredSales = [...mockSales];\n  if (dateRange?.from && dateRange?.to) {\n    const fromDate = new Date(dateRange.from).setHours(0,0,0,0);\n    const toDate = new Date(dateRange.to).setHours(23,59,59,999);\n    filteredSales = mockSales.filter(sale => {\n      const saleDate = new Date(sale.createdAt).getTime();\n      return saleDate >= fromDate && saleDate <= toDate;\n    });\n  }\n  return Promise.resolve(filteredSales);\n}\n\nexport async function getPurchases(dateRange?: { from: Date, to: Date }): Promise<Purchase[]> {\n  console.log(\"Fetching purchases, date range:\", dateRange);\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  let filteredPurchases = [...mockPurchases];\n   if (dateRange?.from && dateRange?.to) {\n    const fromDate = new Date(dateRange.from).setHours(0,0,0,0);\n    const toDate = new Date(dateRange.to).setHours(23,59,59,999);\n    filteredPurchases = mockPurchases.filter(purchase => {\n      const purchaseDateVal = new Date(purchase.purchaseDate).getTime();\n      return purchaseDateVal >= fromDate && purchaseDateVal <= toDate;\n    });\n  }\n  return Promise.resolve(filteredPurchases);\n}\n\nexport async function generateProductImage(input: GenerateProductImageInput): Promise<{ imageUrl?: string; error?: string }> {\n  try {\n    console.log(\"Generating product image for:\", input.productName);\n    const result = await generateProductImageFlow(input);\n    if (!result.imageUrl.startsWith('data:image')) {\n        // This can happen if the model doesn't return a valid image data URI.\n        console.error(\"Generated image URL is not a data URI:\", result.imageUrl);\n        return { error: \"Generated content is not a valid image. Try a different product name.\"};\n    }\n    return { imageUrl: result.imageUrl };\n  } catch (error: any) {\n    console.error(\"Error generating product image:\", error);\n    const errorMessage = error.message || \"Failed to generate product image due to an unexpected error.\";\n    if (error.cause && error.cause.message) { // Genkit often wraps errors\n        return { error: `Image generation failed: ${error.cause.message}` };\n    }\n    return { error: errorMessage };\n  }\n}\n\n\nexport async function processMpesaPayment(phoneNumber: string, amount: number, orderId: string) {\n  try {\n    const response = await initiateStkPush(phoneNumber, amount, orderId);\n    if (response.ResponseCode === \"0\") {\n      return { success: true, message: response.CustomerMessage, checkoutRequestId: response.CheckoutRequestID };\n    }\n    return { success: false, message: response.ResponseDescription || \"MPESA STK push failed.\" };\n  } catch (error) {\n    console.error(\"MPESA Payment Error:\", error);\n    return { success: false, message: \"An error occurred during MPESA payment processing.\" };\n  }\n}\n\nexport async function processAirtelMoneyPayment(phoneNumber: string, amount: number, orderId: string) {\n  try {\n    const response = await initiateAirtelMoneyTransaction(phoneNumber, amount, orderId);\n    if (response.status === \"COMPLETED\" || response.status === \"SUCCESS\") { \n      return { success: true, message: response.message, transactionId: response.transactionId };\n    }\n    return { success: false, message: response.message || \"Airtel Money transaction failed.\" };\n  } catch (error) {\n    console.error(\"Airtel Money Payment Error:\", error);\n    return { success: false, message: \"An error occurred during Airtel Money payment processing.\" };\n  }\n}\n\nexport async function recordSale(saleData: Omit<Sale, 'id' | 'createdAt'>) {\n  const newSale: Sale = {\n    id: `sale_${Date.now()}`,\n    ...saleData,\n    createdAt: new Date().toISOString(),\n  };\n  mockSales.unshift(newSale);\n  console.log(\"Recorded new sale:\", newSale);\n  for (const item of newSale.items) {\n    const productIndex = mockProducts.findIndex(p => p.id === item.productId);\n    if (productIndex !== -1) {\n      mockProducts[productIndex].quantityInStock -= item.quantity;\n    }\n  }\n  return { success: \"Sale recorded successfully!\", sale: newSale };\n}\n\nexport async function recordPurchase(purchaseData: Omit<Purchase, 'id' | 'createdAt' | 'purchaseDate'> & { purchaseDate?: string } ) {\n  const newPurchase: Purchase = {\n    id: `pur_${Date.now()}`,\n    ...purchaseData,\n    purchaseDate: purchaseData.purchaseDate || new Date().toISOString(), // Use provided or current date\n    createdAt: new Date().toISOString(),\n  };\n  mockPurchases.unshift(newPurchase);\n  console.log(\"Recorded new purchase:\", newPurchase);\n  // Optionally, update stock for purchased items\n  for (const item of newPurchase.items) {\n    const product = mockProducts.find(p => p.name.toLowerCase() === item.productName.toLowerCase()); // Match by name (could be improved)\n    if (product) {\n      product.quantityInStock += item.quantity;\n    } else {\n      // Optionally create a new product if it doesn't exist\n      const newProduct: Product = {\n        id: `prod_purch_${Date.now()}_${Math.random().toString(36).substring(2,7)}`,\n        name: item.productName,\n        price: item.unitCost * 1.25, // Example: set price with 25% markup\n        quantityInStock: item.quantity,\n        supplier: newPurchase.supplier,\n        category: \"Uncategorized\",\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      mockProducts.unshift(newProduct);\n    }\n  }\n  return { success: \"Purchase recorded successfully!\", purchase: newPurchase };\n}\n\n\nexport async function getUsers(): Promise<User[]> { \n  await new Promise(resolve => setTimeout(resolve, 300));\n  return Promise.resolve([...mockUsers]);\n}\n\nexport async function addUser(userData: Omit<User, 'id' | 'createdAt'>): Promise<{success: boolean, user?: User, error?: string}> {\n  console.log(\"Attempting to add user:\", userData);\n  if (!userData.email || !userData.name || !userData.role) {\n    return { success: false, error: \"Missing required user data.\" };\n  }\n  const newUser: User = {\n    id: `user_${Date.now()}`,\n    ...userData,\n    createdAt: new Date().toISOString(),\n  };\n  mockUsers.unshift(newUser);\n  return { success: true, user: newUser };\n}\n\nexport async function updateUserRole(userId: string, newRole: UserRole): Promise<{success: boolean, error?: string}> {\n  const userIndex = mockUsers.findIndex(u => u.id === userId);\n  if (userIndex === -1) {\n    return { success: false, error: \"User not found.\" };\n  }\n  mockUsers[userIndex].role = newRole;\n  console.log(`Updated role for user ${userId} to ${newRole}`);\n  return { success: true };\n}\n\nexport async function deleteUser(userId: string): Promise<{success: boolean, error?: string}> {\n   const userToDelete = mockUsers.find(u => u.id === userId);\n   if (!userToDelete) {\n     return { success: false, error: \"User not found.\" };\n   }\n\n   // Prevent deleting the last admin if it's the only admin\n    if (userToDelete.role === 'admin') {\n        const adminCount = mockUsers.filter(u => u.role === 'admin').length;\n        if (adminCount <= 1) {\n            return { success: false, error: \"Cannot delete the last admin user.\" };\n        }\n    }\n\n   const userIndex = mockUsers.findIndex(u => u.id === userId);\n   if (userIndex > -1) {\n     mockUsers.splice(userIndex, 1); // Modify the array in place\n     console.log(`Deleted user ${userId}`);\n     return { success: true };\n   } else {\n     // This case should ideally not be reached if userToDelete was found earlier by `find`.\n     console.error(`User ${userId} was found by 'find' but not by 'findIndex'. This indicates a potential data consistency issue in the mock data or logic.`);\n     return { success: false, error: \"Inconsistency: User found but could not be indexed for deletion.\" };\n   }\n}\n\nexport async function generateMonthlyReport(month: number, year: number) { \n  console.log(`Generating report for ${month}/${year}`); \n  // Simulate report generation\n  await new Promise(resolve => setTimeout(resolve, 1500));\n  const revenue = Math.random() * 10000 + 50000;\n  const costOfGoodsSold = revenue * (Math.random() * 0.3 + 0.4); // COGS between 40-70% of revenue\n  const operatingExpenses = Math.random() * 5000 + 10000;\n  const grossProfit = revenue - costOfGoodsSold;\n  const netIncome = grossProfit - operatingExpenses;\n\n  const report = {\n    id: `report_${year}_${String(month).padStart(2, '0')}`,\n    month,\n    year,\n    incomeStatementData: { revenue, costOfGoodsSold, grossProfit, operatingExpenses, netIncome },\n    generatedAt: new Date().toISOString(),\n    downloadUrl: `/api/reports/download?month=${month}&year=${year}` // Simulated\n  };\n  return { success: true, report }; \n}\n\n// Authentication (Simulated)\nexport async function loginAdmin(formData: FormData) { \n  const email = formData.get('email');\n  // In a real app, validate credentials against a database\n  if (email === 'admin@stockpilot.com') {\n    return { success: \"Login successful! Redirecting...\", redirect: \"/admin/dashboard\" }; \n  }\n  return { error: \"Invalid admin credentials.\" };\n}\n\nexport async function registerCustomer(formData: FormData) { \n  console.log(\"Registering customer:\", Object.fromEntries(formData.entries())); \n  // Simulate adding to mockCustomers or a database\n  return { success: \"Registration successful! Please login.\" , redirect: \"/login\"}; \n}\nexport async function loginCustomer(formData: FormData) { \n  console.log(\"Logging in customer:\", Object.fromEntries(formData.entries())); \n  return { success: \"Login successful! Redirecting...\", redirect: \"/products\" }; \n}\nexport async function updateProduct(productId: string, formData: FormData) { console.log(productId, formData); return { success: \"Not implemented\" }; }\nexport async function deleteProduct(productId: string) { console.log(productId); return { success: \"Not implemented\" }; }\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAqBsB;IA8BA;IA+CA;IAKA;IAgBA;IAgBA;IAqBA;IAaA;IAaA;IAiBA;IAiCA;IAKA;IAcA;IAUA;IA0BA;IAsBA;IASA;IAKA;IAIA;IACA","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/date-range-picker.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { format } from \"date-fns\"\nimport type { DateRange } from \"react-day-picker\"\nimport { Calendar as CalendarIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\n\ninterface DateRangePickerProps extends React.ComponentPropsWithoutRef<typeof PopoverTrigger> {\n  date: DateRange | undefined;\n  onDateChange: (date: DateRange | undefined) => void;\n  className?: string;\n}\n\nexport function DateRangePicker({\n  date,\n  onDateChange,\n  className,\n  ...props\n}: DateRangePickerProps) {\n  return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild {...props}>\n          <Button\n            id=\"date\"\n            variant={\"outline\"}\n            className={cn(\n              \"w-full justify-start text-left font-normal\",\n              !date && \"text-muted-foreground\"\n            )}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {date?.from ? (\n              date.to ? (\n                <>\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\n                  {format(date.to, \"LLL dd, y\")}\n                </>\n              ) : (\n                format(date.from, \"LLL dd, y\")\n              )\n            ) : (\n              <span>Pick a date range</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n          <Calendar\n            initialFocus\n            mode=\"range\"\n            defaultMonth={date?.from}\n            selected={date}\n            onSelect={onDateChange}\n            numberOfMonths={2}\n          />\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAVA;;;;;;;;AAsBO,SAAS,gBAAgB,EAC9B,IAAI,EACJ,YAAY,EACZ,SAAS,EACT,GAAG,OACkB;IACrB,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;kBAC/B,cAAA,8OAAC,mIAAA,CAAA,UAAO;;8BACN,8OAAC,mIAAA,CAAA,iBAAc;oBAAC,OAAO;oBAAE,GAAG,KAAK;8BAC/B,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBACL,IAAG;wBACH,SAAS;wBACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8CACA,CAAC,QAAQ;;0CAGX,8OAAC,0MAAA,CAAA,WAAY;gCAAC,WAAU;;;;;;4BACvB,MAAM,OACL,KAAK,EAAE,iBACL;;oCACG,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE;oCAAa;oCAAG;oCAClC,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,EAAE,EAAE;;+CAGnB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE,6BAGpB,8OAAC;0CAAK;;;;;;;;;;;;;;;;;8BAIZ,8OAAC,mIAAA,CAAA,iBAAc;oBAAC,WAAU;oBAAa,OAAM;8BAC3C,cAAA,8OAAC,oIAAA,CAAA,WAAQ;wBACP,YAAY;wBACZ,MAAK;wBACL,cAAc,MAAM;wBACpB,UAAU;wBACV,UAAU;wBACV,gBAAgB;;;;;;;;;;;;;;;;;;;;;;AAM5B","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/sales/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { FileDown, Search, ShoppingCart, Filter } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport type { Sale } from '@/lib/types';\nimport { getSales } from '@/lib/actions'; // Assuming this action exists\nimport { useToast } from '@/hooks/use-toast';\nimport { DateRangePicker } from '@/components/ui/date-range-picker'; // Assuming this component exists or will be created\nimport { format } from 'date-fns';\nimport type { DateRange } from 'react-day-picker';\n\nexport default function SalesPage() {\n  const [sales, setSales] = useState<Sale[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [dateRange, setDateRange] = useState<DateRange | undefined>();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    async function fetchSales() {\n      setIsLoading(true);\n      try {\n        // Pass dateRange to getSales if it's defined\n        const fetchedSales = await getSales(dateRange ? {from: dateRange.from!, to: dateRange.to!} : undefined);\n        setSales(fetchedSales);\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to fetch sales data.\", variant: \"destructive\" });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchSales();\n  }, [dateRange, toast]);\n\n  const filteredSales = sales.filter(sale =>\n    sale.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    sale.items.some(item => item.productName.toLowerCase().includes(searchTerm.toLowerCase())) ||\n    (sale.transactionId && sale.transactionId.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  const handleExportPdf = (range?: string) => {\n    console.log(`Exporting ${range || 'selected range/all'} sales data as PDF...`);\n    toast({ title: \"Exporting PDF\", description: `Preparing sales data for PDF export.` });\n    // Actual PDF generation logic would go here, considering the dateRange and searchTerm\n  };\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n        <h1 className=\"text-3xl font-semibold\">Sales Records</h1>\n        <div className=\"flex gap-2 w-full sm:w-auto\">\n           <DateRangePicker date={dateRange} onDateChange={setDateRange} />\n           <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"w-full sm:w-auto\">\n                <FileDown className=\"mr-2 h-4 w-4\" /> Export PDF\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuLabel>Select Export Range</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem onSelect={() => handleExportPdf('current_view')}>Current View</DropdownMenuItem>\n              <DropdownMenuItem onSelect={() => handleExportPdf('all_time')}>All Sales Data</DropdownMenuItem>\n              {/* Custom range might involve a modal or further inputs */}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n      \n      <div className=\"relative\">\n        <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n        <Input\n          type=\"search\"\n          placeholder=\"Search sales by ID, product, or transaction ID...\"\n          className=\"w-full rounded-lg bg-background pl-8\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Sales History</CardTitle>\n          <CardDescription>\n            Detailed list of all sales transactions. Filter by date range and search.\n            {dateRange?.from && (\n               <span className=\"block mt-1 text-xs\">\n                 Displaying sales from {format(dateRange.from, \"LLL dd, y\")}\n                 {dateRange.to && ` to ${format(dateRange.to, \"LLL dd, y\")}`}\n               </span>\n            )}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <p>Loading sales data...</p>\n          ) : filteredSales.length === 0 ? (\n            <div className=\"text-center py-10\">\n              <ShoppingCart className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <h3 className=\"mt-2 text-sm font-semibold\">No sales found</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                {searchTerm || dateRange ? \"Try adjusting your search or date range.\" : \"No sales have been recorded yet.\"}\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Sale ID</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead>Items</TableHead>\n                  <TableHead>Total Amount</TableHead>\n                  <TableHead>Payment Method</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead className=\"hidden md:table-cell\">Transaction ID</TableHead>\n                  <TableHead>\n                    <span className=\"sr-only\">Actions</span>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredSales.map((sale) => (\n                  <TableRow key={sale.id}>\n                    <TableCell className=\"font-medium\">{sale.id}</TableCell>\n                    <TableCell>{format(new Date(sale.createdAt), \"PPpp\")}</TableCell>\n                    <TableCell>\n                      {sale.items.map(item => `${item.productName} (x${item.quantity})`).join(', ')}\n                    </TableCell>\n                    <TableCell>${sale.totalAmount.toFixed(2)}</TableCell>\n                    <TableCell className=\"capitalize\">{sale.paymentMethod}</TableCell>\n                    <TableCell>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        sale.paymentStatus === 'paid' ? 'bg-green-100 text-green-800' :\n                        sale.paymentStatus === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'\n                      }`}>\n                        {sale.paymentStatus}\n                      </span>\n                    </TableCell>\n                    <TableCell className=\"hidden md:table-cell\">{sale.transactionId || 'N/A'}</TableCell>\n                    <TableCell>\n                       <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                            <Filter className=\"h-4 w-4\" /> {/* Using Filter icon as placeholder */}\n                            <span className=\"sr-only\">Toggle menu</span>\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                          <DropdownMenuItem>View Details</DropdownMenuItem>\n                          {sale.receiptUrl && <DropdownMenuItem onClick={() => window.open(sale.receiptUrl, '_blank')}>Download Receipt</DropdownMenuItem>}\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}