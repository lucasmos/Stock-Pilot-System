{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { generateProductImage as generateProductImageFlow, type GenerateProductImageInput } from '@/ai/flows/product-image-generation';\nimport type { Product, Sale, Purchase } from './types';\nimport { mockProducts, mockSales, mockPurchases } from './data'; // For simulating data ops\nimport { initiateStkPush } from '@/services/safaricom';\nimport { initiateAirtelMoneyTransaction } from '@/services/airtel-money';\n\n// Schema for adding a product\nconst AddProductSchema = z.object({\n  name: z.string().min(3, \"Product name must be at least 3 characters\"),\n  description: z.string().optional(),\n  price: z.coerce.number().positive(\"Price must be a positive number\"),\n  quantityInStock: z.coerce.number().int().nonnegative(\"Quantity must be a non-negative integer\"),\n  category: z.string().optional(),\n  supplier: z.string().optional(),\n  imageUrl: z.string().url(\"Invalid image URL\").optional(),\n});\n\nexport async function addProduct(formData: FormData) {\n  const validatedFields = AddProductSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!validatedFields.success) {\n    return {\n      error: \"Invalid fields\",\n      details: validatedFields.error.flatten().fieldErrors,\n    };\n  }\n  \n  const newProduct: Product = {\n    id: `prod_${Date.now()}`,\n    ...validatedFields.data,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  };\n\n  // Simulate adding to a database\n  mockProducts.push(newProduct);\n  console.log(\"Added new product:\", newProduct);\n\n  return { success: \"Product added successfully!\", product: newProduct };\n}\n\nexport async function getProducts(): Promise<Product[]> {\n  // Simulate fetching from a database\n  return Promise.resolve(mockProducts);\n}\n\nexport async function getSales(dateRange?: { from: Date, to: Date }): Promise<Sale[]> {\n  // Simulate fetching and filtering sales\n  console.log(\"Fetching sales, date range:\", dateRange);\n  return Promise.resolve(mockSales);\n}\n\nexport async function getPurchases(dateRange?: { from: Date, to: Date }): Promise<Purchase[]> {\n  // Simulate fetching and filtering purchases\n  console.log(\"Fetching purchases, date range:\", dateRange);\n  return Promise.resolve(mockPurchases);\n}\n\nexport async function generateProductImage(input: GenerateProductImageInput): Promise<{ imageUrl?: string; error?: string }> {\n  try {\n    console.log(\"Generating product image for:\", input.productName);\n    // In a real app, ensure API keys for Genkit are set up on the server\n    const result = await generateProductImageFlow(input);\n    return { imageUrl: result.imageUrl };\n  } catch (error) {\n    console.error(\"Error generating product image:\", error);\n    return { error: \"Failed to generate product image.\" };\n  }\n}\n\n\nexport async function processMpesaPayment(phoneNumber: string, amount: number, orderId: string) {\n  try {\n    const response = await initiateStkPush(phoneNumber, amount, orderId);\n    // Handle response - typically you'd store CheckoutRequestID and wait for a callback\n    if (response.ResponseCode === \"0\") {\n      return { success: true, message: response.CustomerMessage, checkoutRequestId: response.CheckoutRequestID };\n    }\n    return { success: false, message: response.ResponseDescription || \"MPESA STK push failed.\" };\n  } catch (error) {\n    console.error(\"MPESA Payment Error:\", error);\n    return { success: false, message: \"An error occurred during MPESA payment processing.\" };\n  }\n}\n\nexport async function processAirtelMoneyPayment(phoneNumber: string, amount: number, orderId: string) {\n  try {\n    const response = await initiateAirtelMoneyTransaction(phoneNumber, amount, orderId);\n    // Handle response\n    if (response.status === \"COMPLETED\" || response.status === \"SUCCESS\") { // Adjust based on actual API success status\n      return { success: true, message: response.message, transactionId: response.transactionId };\n    }\n    return { success: false, message: response.message || \"Airtel Money transaction failed.\" };\n  } catch (error) {\n    console.error(\"Airtel Money Payment Error:\", error);\n    return { success: false, message: \"An error occurred during Airtel Money payment processing.\" };\n  }\n}\n\nexport async function recordSale(saleData: Omit<Sale, 'id' | 'createdAt'>) {\n  const newSale: Sale = {\n    id: `sale_${Date.now()}`,\n    ...saleData,\n    createdAt: new Date().toISOString(),\n  };\n  mockSales.push(newSale);\n  console.log(\"Recorded new sale:\", newSale);\n  // Deduct stock (simplified)\n  for (const item of newSale.items) {\n    const product = mockProducts.find(p => p.id === item.productId);\n    if (product) {\n      product.quantityInStock -= item.quantity;\n    }\n  }\n  return { success: \"Sale recorded successfully!\", sale: newSale };\n}\n\n// Placeholder for other actions\nexport async function updateProduct(productId: string, formData: FormData) { console.log(productId, formData); return { success: \"Not implemented\" }; }\nexport async function deleteProduct(productId: string) { console.log(productId); return { success: \"Not implemented\" }; }\nexport async function recordPurchase(purchaseData: Omit<Purchase, 'id' | 'createdAt'>) { console.log(purchaseData); return { success: \"Not implemented\" }; }\nexport async function getUsers() { return []; }\nexport async function addUser(userData: any) { console.log(userData); return { success: \"Not implemented\" }; }\nexport async function updateUserRole(userId: string, newRole: any) { console.log(userId, newRole); return { success: \"Not implemented\" }; }\nexport async function deleteUser(userId: string) { console.log(userId); return { success: \"Not implemented\" }; }\nexport async function generateMonthlyReport(month: number, year: number) { console.log(month, year); return { success: \"Not implemented\" }; }\nexport async function loginAdmin(formData: FormData) { console.log(formData); return { success: \"Not implemented, redirecting...\", redirect: \"/admin/dashboard\" }; }\nexport async function registerCustomer(formData: FormData) { console.log(formData); return { success: \"Not implemented\" }; }\nexport async function loginCustomer(formData: FormData) { console.log(formData); return { success: \"Not implemented, redirecting...\", redirect: \"/products\" }; }\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAoBsB;IAwBA;IAKA;IAMA;IAMA;IAaA;IAcA;IAcA;IAmBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/inventory/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useTransition } from 'react';\nimport Image from 'next/image';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { PlusCircle, FileDown, Edit, Trash2, Search, PackageSearch, PackageOpen, Image as ImageIcon, Loader2 } from 'lucide-react';\nimport type { Product } from '@/lib/types';\nimport { getProducts, addProduct, generateProductImage } from '@/lib/actions'; // Assuming these actions exist\nimport { useToast } from '@/hooks/use-toast';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\nconst productFormSchema = z.object({\n  name: z.string().min(3, { message: \"Product name must be at least 3 characters.\" }),\n  description: z.string().optional(),\n  price: z.coerce.number().positive({ message: \"Price must be a positive number.\" }),\n  quantityInStock: z.coerce.number().int().nonnegative({ message: \"Quantity must be a non-negative integer.\" }),\n  category: z.string().optional(),\n  supplier: z.string().optional(),\n  imageUrl: z.string().url({ message: \"Please enter a valid URL.\" }).optional(),\n});\n\ntype ProductFormValues = z.infer<typeof productFormSchema>;\n\nexport default function InventoryPage() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAddProductDialogOpen, setIsAddProductDialogOpen] = useState(false);\n  const [isPending, startTransition] = useTransition();\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n\n  const { toast } = useToast();\n  const form = useForm<ProductFormValues>({\n    resolver: zodResolver(productFormSchema),\n    defaultValues: {\n      name: \"\",\n      description: \"\",\n      price: 0,\n      quantityInStock: 0,\n      category: \"\",\n      supplier: \"\",\n      imageUrl: \"\",\n    },\n  });\n\n  useEffect(() => {\n    async function fetchProducts() {\n      setIsLoading(true);\n      try {\n        const fetchedProducts = await getProducts();\n        setProducts(fetchedProducts);\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to fetch products.\", variant: \"destructive\" });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchProducts();\n  }, [toast]);\n  \n  const handleGenerateImage = async () => {\n    const productName = form.getValues(\"name\");\n    if (!productName) {\n      toast({ title: \"Product Name Required\", description: \"Please enter a product name to generate an image.\", variant: \"destructive\" });\n      return;\n    }\n    setIsGeneratingImage(true);\n    try {\n      const result = await generateProductImage({ productName });\n      if (result.imageUrl) {\n        form.setValue(\"imageUrl\", result.imageUrl);\n        toast({ title: \"Image Generated\", description: \"Product image URL has been set.\" });\n      } else {\n        toast({ title: \"Image Generation Failed\", description: result.error || \"Could not generate image.\", variant: \"destructive\" });\n      }\n    } catch (error) {\n      toast({ title: \"Error\", description: \"An error occurred while generating the image.\", variant: \"destructive\" });\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n\n  const onSubmit = async (values: ProductFormValues) => {\n    startTransition(async () => {\n      const formData = new FormData();\n      Object.entries(values).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          formData.append(key, String(value));\n        }\n      });\n\n      const result = await addProduct(formData);\n      if (result.success) {\n        toast({ title: \"Success\", description: result.success });\n        setProducts(prev => [...prev, result.product as Product]); // Assuming addProduct returns the new product\n        setIsAddProductDialogOpen(false);\n        form.reset();\n      } else {\n        toast({ title: \"Error\", description: result.error || \"Failed to add product.\", variant: \"destructive\" });\n      }\n    });\n  };\n\n  const filteredProducts = products.filter(product =>\n    product.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Placeholder for PDF export functionality\n  const handleExportPdf = (range?: string) => {\n    console.log(`Exporting ${range || 'all'} data as PDF...`);\n    toast({ title: \"Exporting PDF\", description: `Preparing ${range || 'all'} product data for PDF export.` });\n    // Actual PDF generation logic would go here\n  };\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n        <h1 className=\"text-3xl font-semibold\">Inventory Management</h1>\n        <div className=\"flex gap-2 w-full sm:w-auto\">\n          <Dialog open={isAddProductDialogOpen} onOpenChange={setIsAddProductDialogOpen}>\n            <DialogTrigger asChild>\n              <Button className=\"w-full sm:w-auto\">\n                <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Product\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-lg\">\n              <DialogHeader>\n                <DialogTitle>Add New Product</DialogTitle>\n                <DialogDescription>\n                  Fill in the details for the new product. Click \"Generate Image\" to automatically find a product photo.\n                </DialogDescription>\n              </DialogHeader>\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 py-4\">\n                  <FormField\n                    control={form.control}\n                    name=\"name\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Product Name</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Dell XPS 15\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"description\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Description</FormLabel>\n                        <FormControl>\n                          <Textarea placeholder=\"Detailed product description\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"price\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Price ($)</FormLabel>\n                          <FormControl>\n                            <Input type=\"number\" step=\"0.01\" placeholder=\"99.99\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"quantityInStock\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Quantity</FormLabel>\n                          <FormControl>\n                            <Input type=\"number\" placeholder=\"100\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                  <FormField\n                    control={form.control}\n                    name=\"category\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Category</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Laptops\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"supplier\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Supplier</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Dell Inc.\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"imageUrl\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Image URL</FormLabel>\n                        <div className=\"flex items-center gap-2\">\n                          <FormControl>\n                            <Input placeholder=\"https://example.com/image.jpg\" {...field} />\n                          </FormControl>\n                          <Button type=\"button\" variant=\"outline\" onClick={handleGenerateImage} disabled={isGeneratingImage || !form.getValues(\"name\")}>\n                            {isGeneratingImage ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <ImageIcon className=\"h-4 w-4\" />}\n                          </Button>\n                        </div>\n                        {field.value && (\n                          <div className=\"mt-2\">\n                            <Image src={field.value} alt=\"Product Preview\" width={100} height={100} className=\"rounded-md object-cover\" data-ai-hint=\"product image\" />\n                          </div>\n                        )}\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <DialogFooter>\n                    <Button type=\"button\" variant=\"outline\" onClick={() => setIsAddProductDialogOpen(false)}>Cancel</Button>\n                    <Button type=\"submit\" disabled={isPending}>\n                      {isPending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                      Save Product\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </Form>\n            </DialogContent>\n          </Dialog>\n           <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"w-full sm:w-auto\">\n                <FileDown className=\"mr-2 h-4 w-4\" /> Export PDF\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuLabel>Select Export Range</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem onSelect={() => handleExportPdf('last_7_days')}>Last 7 Days</DropdownMenuItem>\n              <DropdownMenuItem onSelect={() => handleExportPdf('last_30_days')}>Last 30 Days</DropdownMenuItem>\n              <DropdownMenuItem onSelect={() => handleExportPdf('all_time')}>All Data</DropdownMenuItem>\n              {/* Add more custom range options if needed */}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n\n      <div className=\"relative\">\n        <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n        <Input\n          type=\"search\"\n          placeholder=\"Search products by name...\"\n          className=\"w-full rounded-lg bg-background pl-8\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n      \n      <Card>\n        <CardHeader>\n          <CardTitle>Product List</CardTitle>\n          <CardDescription>Manage your product inventory. Current stock levels and details.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            </div>\n          ) : filteredProducts.length === 0 ? (\n            <div className=\"text-center py-10\">\n              <PackageSearch className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <h3 className=\"mt-2 text-sm font-semibold\">No products found</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                {searchTerm ? \"Try adjusting your search term.\" : \"Add a new product to get started.\"}\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead className=\"hidden w-[100px] sm:table-cell\">Image</TableHead>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Category</TableHead>\n                  <TableHead className=\"hidden md:table-cell\">Price</TableHead>\n                  <TableHead>In Stock</TableHead>\n                  <TableHead className=\"hidden md:table-cell\">Supplier</TableHead>\n                  <TableHead>\n                    <span className=\"sr-only\">Actions</span>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredProducts.map((product) => (\n                  <TableRow key={product.id}>\n                    <TableCell className=\"hidden sm:table-cell\">\n                      {product.imageUrl ? (\n                        <Image\n                          alt={product.name}\n                          className=\"aspect-square rounded-md object-cover\"\n                          height=\"64\"\n                          src={product.imageUrl}\n                          width=\"64\"\n                          data-ai-hint=\"product image\"\n                        />\n                      ) : (\n                        <div className=\"h-16 w-16 bg-muted rounded-md flex items-center justify-center\">\n                          <PackageOpen className=\"h-8 w-8 text-muted-foreground\" />\n                        </div>\n                      )}\n                    </TableCell>\n                    <TableCell className=\"font-medium\">{product.name}</TableCell>\n                    <TableCell>{product.category || 'N/A'}</TableCell>\n                    <TableCell className=\"hidden md:table-cell\">${product.price.toFixed(2)}</TableCell>\n                    <TableCell>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        product.quantityInStock > 10 ? 'bg-green-100 text-green-800' :\n                        product.quantityInStock > 0 ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'\n                      }`}>\n                        {product.quantityInStock}\n                      </span>\n                    </TableCell>\n                    <TableCell className=\"hidden md:table-cell\">{product.supplier || 'N/A'}</TableCell>\n                    <TableCell>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                            <Edit className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Toggle menu</span>\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                          <DropdownMenuItem>Edit</DropdownMenuItem>\n                          <DropdownMenuItem className=\"text-destructive\">Delete</DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}