{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { generateProductImage as generateProductImageFlow, type GenerateProductImageInput } from '@/ai/flows/product-image-generation';\nimport type { Product, Sale, Purchase, User, UserRole } from './types';\nimport { mockProducts, mockSales, mockPurchases, mockUsers } from './data'; // For simulating data ops\nimport { initiateStkPush } from '@/services/safaricom';\nimport { initiateAirtelMoneyTransaction } from '@/services/airtel-money';\n\n// Schema for adding a product\nconst AddProductSchema = z.object({\n  name: z.string().min(3, \"Product name must be at least 3 characters\"),\n  description: z.string().optional(),\n  price: z.coerce.number().positive(\"Price must be a positive number\"),\n  quantityInStock: z.coerce.number().int().nonnegative(\"Quantity must be a non-negative integer\"),\n  category: z.string().optional(),\n  supplier: z.string().optional(),\n  imageUrl: z.string().url(\"Invalid image URL\").optional().or(z.literal('')),\n});\n\nexport async function addProduct(formData: FormData) {\n  const rawData = Object.fromEntries(formData.entries());\n  const validatedFields = AddProductSchema.safeParse(rawData);\n\n  if (!validatedFields.success) {\n    console.error(\"Validation errors:\", validatedFields.error.flatten().fieldErrors);\n    return {\n      error: \"Invalid fields. Please check the data and try again.\",\n      details: validatedFields.error.flatten().fieldErrors,\n    };\n  }\n  \n  const newProductData = validatedFields.data;\n  if (newProductData.imageUrl === '') {\n    delete newProductData.imageUrl; // Remove if empty string so it becomes undefined\n  }\n\n  const newProduct: Product = {\n    id: `prod_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`, // More unique ID\n    ...newProductData,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  };\n\n  mockProducts.unshift(newProduct); // Add to the beginning for visibility\n  console.log(\"Added new product:\", newProduct);\n\n  return { success: \"Product added successfully!\", product: newProduct };\n}\n\nexport async function addProductsFromExcel(formData: FormData) {\n  const file = formData.get('excelFile') as File;\n\n  if (!file) {\n    return { error: \"No Excel file provided.\" };\n  }\n\n  console.log(\"Received Excel file:\", file.name, \"Size:\", file.size);\n\n  // ** SIMULATION ONLY **\n  // In a real application, you would use a library like 'xlsx' or 'SheetJS' here to:\n  // 1. Read the file buffer: `await file.arrayBuffer()`\n  // 2. Parse the Excel data from the buffer.\n  // 3. Iterate over rows and validate each product using AddProductSchema.\n  // 4. Collect valid products and any errors.\n\n  // For demonstration, let's simulate adding a couple of products\n  const simulatedParsedProducts = [\n    { name: \"Excel Product A\", price: 19.99, quantityInStock: 150, category: \"Excel Uploads\", description: \"Added via Excel\" },\n    { name: \"Excel Product B\", price: 29.99, quantityInStock: 75, category: \"Excel Uploads\", description: \"Another one via Excel\" },\n  ];\n\n  let addedCount = 0;\n  for (const prodData of simulatedParsedProducts) {\n    const validatedFields = AddProductSchema.safeParse(prodData);\n    if (validatedFields.success) {\n      const newProduct: Product = {\n        id: `prod_excel_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`,\n        ...validatedFields.data,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      mockProducts.unshift(newProduct);\n      addedCount++;\n    } else {\n      console.warn(\"Skipping invalid product from Excel (simulated):\", prodData, validatedFields.error.flatten().fieldErrors);\n    }\n  }\n\n  if (addedCount > 0) {\n    return { success: true, message: `Successfully processed Excel file. ${addedCount} products added (simulated). Actual Excel parsing requires a library.` };\n  } else {\n    return { error: \"No valid products found in Excel file (simulated). Actual Excel parsing requires a library.\" };\n  }\n}\n\n\nexport async function getProducts(): Promise<Product[]> {\n  await new Promise(resolve => setTimeout(resolve, 500)); // Simulate network delay\n  return Promise.resolve([...mockProducts]); // Return a copy to avoid direct mutation issues in components\n}\n\nexport async function getSales(dateRange?: { from: Date, to: Date }): Promise<Sale[]> {\n  console.log(\"Fetching sales, date range:\", dateRange);\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  let filteredSales = [...mockSales];\n  if (dateRange?.from && dateRange?.to) {\n    const fromDate = new Date(dateRange.from).setHours(0,0,0,0);\n    const toDate = new Date(dateRange.to).setHours(23,59,59,999);\n    filteredSales = mockSales.filter(sale => {\n      const saleDate = new Date(sale.createdAt).getTime();\n      return saleDate >= fromDate && saleDate <= toDate;\n    });\n  }\n  return Promise.resolve(filteredSales);\n}\n\nexport async function getPurchases(dateRange?: { from: Date, to: Date }): Promise<Purchase[]> {\n  console.log(\"Fetching purchases, date range:\", dateRange);\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  let filteredPurchases = [...mockPurchases];\n   if (dateRange?.from && dateRange?.to) {\n    const fromDate = new Date(dateRange.from).setHours(0,0,0,0);\n    const toDate = new Date(dateRange.to).setHours(23,59,59,999);\n    filteredPurchases = mockPurchases.filter(purchase => {\n      const purchaseDateVal = new Date(purchase.purchaseDate).getTime();\n      return purchaseDateVal >= fromDate && purchaseDateVal <= toDate;\n    });\n  }\n  return Promise.resolve(filteredPurchases);\n}\n\nexport async function generateProductImage(input: GenerateProductImageInput): Promise<{ imageUrl?: string; error?: string }> {\n  try {\n    console.log(\"Generating product image for:\", input.productName);\n    const result = await generateProductImageFlow(input);\n    if (!result.imageUrl.startsWith('data:image')) {\n        // This can happen if the model doesn't return a valid image data URI.\n        console.error(\"Generated image URL is not a data URI:\", result.imageUrl);\n        return { error: \"Generated content is not a valid image. Try a different product name.\"};\n    }\n    return { imageUrl: result.imageUrl };\n  } catch (error: any) {\n    console.error(\"Error generating product image:\", error);\n    const errorMessage = error.message || \"Failed to generate product image due to an unexpected error.\";\n    if (error.cause && error.cause.message) { // Genkit often wraps errors\n        return { error: `Image generation failed: ${error.cause.message}` };\n    }\n    return { error: errorMessage };\n  }\n}\n\n\nexport async function processMpesaPayment(phoneNumber: string, amount: number, orderId: string) {\n  try {\n    const response = await initiateStkPush(phoneNumber, amount, orderId);\n    if (response.ResponseCode === \"0\") {\n      return { success: true, message: response.CustomerMessage, checkoutRequestId: response.CheckoutRequestID };\n    }\n    return { success: false, message: response.ResponseDescription || \"MPESA STK push failed.\" };\n  } catch (error) {\n    console.error(\"MPESA Payment Error:\", error);\n    return { success: false, message: \"An error occurred during MPESA payment processing.\" };\n  }\n}\n\nexport async function processAirtelMoneyPayment(phoneNumber: string, amount: number, orderId: string) {\n  try {\n    const response = await initiateAirtelMoneyTransaction(phoneNumber, amount, orderId);\n    if (response.status === \"COMPLETED\" || response.status === \"SUCCESS\") { \n      return { success: true, message: response.message, transactionId: response.transactionId };\n    }\n    return { success: false, message: response.message || \"Airtel Money transaction failed.\" };\n  } catch (error) {\n    console.error(\"Airtel Money Payment Error:\", error);\n    return { success: false, message: \"An error occurred during Airtel Money payment processing.\" };\n  }\n}\n\nexport async function recordSale(saleData: Omit<Sale, 'id' | 'createdAt'>) {\n  const newSale: Sale = {\n    id: `sale_${Date.now()}`,\n    ...saleData,\n    createdAt: new Date().toISOString(),\n  };\n  mockSales.unshift(newSale);\n  console.log(\"Recorded new sale:\", newSale);\n  for (const item of newSale.items) {\n    const productIndex = mockProducts.findIndex(p => p.id === item.productId);\n    if (productIndex !== -1) {\n      mockProducts[productIndex].quantityInStock -= item.quantity;\n    }\n  }\n  return { success: \"Sale recorded successfully!\", sale: newSale };\n}\n\nexport async function recordPurchase(purchaseData: Omit<Purchase, 'id' | 'createdAt' | 'purchaseDate'> & { purchaseDate?: string } ) {\n  const newPurchase: Purchase = {\n    id: `pur_${Date.now()}`,\n    ...purchaseData,\n    purchaseDate: purchaseData.purchaseDate || new Date().toISOString(), // Use provided or current date\n    createdAt: new Date().toISOString(),\n  };\n  mockPurchases.unshift(newPurchase);\n  console.log(\"Recorded new purchase:\", newPurchase);\n  // Optionally, update stock for purchased items\n  for (const item of newPurchase.items) {\n    const product = mockProducts.find(p => p.name.toLowerCase() === item.productName.toLowerCase()); // Match by name (could be improved)\n    if (product) {\n      product.quantityInStock += item.quantity;\n    } else {\n      // Optionally create a new product if it doesn't exist\n      const newProduct: Product = {\n        id: `prod_purch_${Date.now()}_${Math.random().toString(36).substring(2,7)}`,\n        name: item.productName,\n        price: item.unitCost * 1.25, // Example: set price with 25% markup\n        quantityInStock: item.quantity,\n        supplier: newPurchase.supplier,\n        category: \"Uncategorized\",\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      mockProducts.unshift(newProduct);\n    }\n  }\n  return { success: \"Purchase recorded successfully!\", purchase: newPurchase };\n}\n\n\nexport async function getUsers(): Promise<User[]> { \n  await new Promise(resolve => setTimeout(resolve, 300));\n  return Promise.resolve([...mockUsers]);\n}\n\nexport async function addUser(userData: Omit<User, 'id' | 'createdAt'>): Promise<{success: boolean, user?: User, error?: string}> {\n  console.log(\"Attempting to add user:\", userData);\n  if (!userData.email || !userData.name || !userData.role) {\n    return { success: false, error: \"Missing required user data.\" };\n  }\n  const newUser: User = {\n    id: `user_${Date.now()}`,\n    ...userData,\n    createdAt: new Date().toISOString(),\n  };\n  mockUsers.unshift(newUser);\n  return { success: true, user: newUser };\n}\n\nexport async function updateUserRole(userId: string, newRole: UserRole): Promise<{success: boolean, error?: string}> {\n  const userIndex = mockUsers.findIndex(u => u.id === userId);\n  if (userIndex === -1) {\n    return { success: false, error: \"User not found.\" };\n  }\n  mockUsers[userIndex].role = newRole;\n  console.log(`Updated role for user ${userId} to ${newRole}`);\n  return { success: true };\n}\n\nexport async function deleteUser(userId: string): Promise<{success: boolean, error?: string}> {\n   const userToDelete = mockUsers.find(u => u.id === userId);\n   if (!userToDelete) {\n     return { success: false, error: \"User not found.\" };\n   }\n\n   // Prevent deleting the last admin if it's the only admin\n    if (userToDelete.role === 'admin') {\n        const adminCount = mockUsers.filter(u => u.role === 'admin').length;\n        if (adminCount <= 1) {\n            return { success: false, error: \"Cannot delete the last admin user.\" };\n        }\n    }\n\n   const userIndex = mockUsers.findIndex(u => u.id === userId);\n   if (userIndex > -1) {\n     mockUsers.splice(userIndex, 1); // Modify the array in place\n     console.log(`Deleted user ${userId}`);\n     return { success: true };\n   } else {\n     // This case should ideally not be reached if userToDelete was found earlier by `find`.\n     console.error(`User ${userId} was found by 'find' but not by 'findIndex'. This indicates a potential data consistency issue in the mock data or logic.`);\n     return { success: false, error: \"Inconsistency: User found but could not be indexed for deletion.\" };\n   }\n}\n\nexport async function generateMonthlyReport(month: number, year: number) { \n  console.log(`Generating report for ${month}/${year}`); \n  // Simulate report generation\n  await new Promise(resolve => setTimeout(resolve, 1500));\n  const revenue = Math.random() * 10000 + 50000;\n  const costOfGoodsSold = revenue * (Math.random() * 0.3 + 0.4); // COGS between 40-70% of revenue\n  const operatingExpenses = Math.random() * 5000 + 10000;\n  const grossProfit = revenue - costOfGoodsSold;\n  const netIncome = grossProfit - operatingExpenses;\n\n  const report = {\n    id: `report_${year}_${String(month).padStart(2, '0')}`,\n    month,\n    year,\n    incomeStatementData: { revenue, costOfGoodsSold, grossProfit, operatingExpenses, netIncome },\n    generatedAt: new Date().toISOString(),\n    downloadUrl: `/api/reports/download?month=${month}&year=${year}` // Simulated\n  };\n  return { success: true, report }; \n}\n\n// Authentication (Simulated)\nexport async function loginAdmin(formData: FormData) { \n  const email = formData.get('email');\n  // In a real app, validate credentials against a database\n  if (email === 'admin@stockpilot.com') {\n    return { success: \"Login successful! Redirecting...\", redirect: \"/admin/dashboard\" }; \n  }\n  return { error: \"Invalid admin credentials.\" };\n}\n\nexport async function registerCustomer(formData: FormData) { \n  console.log(\"Registering customer:\", Object.fromEntries(formData.entries())); \n  // Simulate adding to mockCustomers or a database\n  return { success: \"Registration successful! Please login.\" , redirect: \"/login\"}; \n}\nexport async function loginCustomer(formData: FormData) { \n  console.log(\"Logging in customer:\", Object.fromEntries(formData.entries())); \n  return { success: \"Login successful! Redirecting...\", redirect: \"/products\" }; \n}\nexport async function updateProduct(productId: string, formData: FormData) { console.log(productId, formData); return { success: \"Not implemented\" }; }\nexport async function deleteProduct(productId: string) { console.log(productId); return { success: \"Not implemented\" }; }\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAqBsB;IA8BA;IA+CA;IAKA;IAgBA;IAgBA;IAqBA;IAaA;IAaA;IAiBA;IAiCA;IAKA;IAcA;IAUA;IA0BA;IAsBA;IASA;IAKA;IAIA;IACA","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/date-range-picker.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { format } from \"date-fns\"\nimport type { DateRange } from \"react-day-picker\"\nimport { Calendar as CalendarIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\n\ninterface DateRangePickerProps extends React.ComponentPropsWithoutRef<typeof PopoverTrigger> {\n  date: DateRange | undefined;\n  onDateChange: (date: DateRange | undefined) => void;\n  className?: string;\n}\n\nexport function DateRangePicker({\n  date,\n  onDateChange,\n  className,\n  ...props\n}: DateRangePickerProps) {\n  return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild {...props}>\n          <Button\n            id=\"date\"\n            variant={\"outline\"}\n            className={cn(\n              \"w-full justify-start text-left font-normal\",\n              !date && \"text-muted-foreground\"\n            )}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {date?.from ? (\n              date.to ? (\n                <>\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\n                  {format(date.to, \"LLL dd, y\")}\n                </>\n              ) : (\n                format(date.from, \"LLL dd, y\")\n              )\n            ) : (\n              <span>Pick a date range</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n          <Calendar\n            initialFocus\n            mode=\"range\"\n            defaultMonth={date?.from}\n            selected={date}\n            onSelect={onDateChange}\n            numberOfMonths={2}\n          />\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAVA;;;;;;;;AAsBO,SAAS,gBAAgB,EAC9B,IAAI,EACJ,YAAY,EACZ,SAAS,EACT,GAAG,OACkB;IACrB,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;kBAC/B,cAAA,8OAAC,mIAAA,CAAA,UAAO;;8BACN,8OAAC,mIAAA,CAAA,iBAAc;oBAAC,OAAO;oBAAE,GAAG,KAAK;8BAC/B,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBACL,IAAG;wBACH,SAAS;wBACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8CACA,CAAC,QAAQ;;0CAGX,8OAAC,0MAAA,CAAA,WAAY;gCAAC,WAAU;;;;;;4BACvB,MAAM,OACL,KAAK,EAAE,iBACL;;oCACG,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE;oCAAa;oCAAG;oCAClC,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,EAAE,EAAE;;+CAGnB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,IAAI,EAAE,6BAGpB,8OAAC;0CAAK;;;;;;;;;;;;;;;;;8BAIZ,8OAAC,mIAAA,CAAA,iBAAc;oBAAC,WAAU;oBAAa,OAAM;8BAC3C,cAAA,8OAAC,oIAAA,CAAA,WAAQ;wBACP,YAAY;wBACZ,MAAK;wBACL,cAAc,MAAM;wBACpB,UAAU;wBACV,UAAU;wBACV,gBAAgB;;;;;;;;;;;;;;;;;;;;;;AAM5B","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/purchases/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { FileDown, Search, Truck, Filter, PlusCircle } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport type { Purchase } from '@/lib/types';\nimport { getPurchases, recordPurchase } from '@/lib/actions'; // Assuming these actions exist\nimport { useToast } from '@/hooks/use-toast';\nimport { DateRangePicker } from '@/components/ui/date-range-picker'; // Assuming this component exists\nimport { format } from 'date-fns';\nimport type { DateRange } from 'react-day-picker';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea'; // For multi-item input\n\nexport default function PurchasesPage() {\n  const [purchases, setPurchases] = useState<Purchase[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [dateRange, setDateRange] = useState<DateRange | undefined>();\n  const [isAddPurchaseDialogOpen, setIsAddPurchaseDialogOpen] = useState(false);\n  // Form state for new purchase\n  const [newPurchaseSupplier, setNewPurchaseSupplier] = useState('');\n  const [newPurchaseItems, setNewPurchaseItems] = useState([{ productName: '', quantity: 1, unitCost: 0 }]); // Array for multiple items\n  \n  const { toast } = useToast();\n\n  useEffect(() => {\n    async function fetchPurchases() {\n      setIsLoading(true);\n      try {\n        const fetchedPurchases = await getPurchases(dateRange ? { from: dateRange.from!, to: dateRange.to! } : undefined);\n        setPurchases(fetchedPurchases);\n      } catch (error) {\n        toast({ title: \"Error\", description: \"Failed to fetch purchase data.\", variant: \"destructive\" });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchPurchases();\n  }, [dateRange, toast]);\n\n  const filteredPurchases = purchases.filter(purchase =>\n    purchase.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    purchase.supplier.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    purchase.items.some(item => item.productName.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  const handleExportPdf = (range?: string) => {\n    console.log(`Exporting ${range || 'selected range/all'} purchase data as PDF...`);\n    toast({ title: \"Exporting PDF\", description: `Preparing purchase data for PDF export.` });\n  };\n  \n  const handleAddItemToPurchase = () => {\n    setNewPurchaseItems([...newPurchaseItems, { productName: '', quantity: 1, unitCost: 0 }]);\n  };\n\n  const handleRemoveItemFromPurchase = (index: number) => {\n    const items = [...newPurchaseItems];\n    items.splice(index, 1);\n    setNewPurchaseItems(items);\n  };\n  \n  const handleItemChange = (index: number, field: string, value: string | number) => {\n    const items = [...newPurchaseItems];\n    if (field === 'productName') items[index].productName = value as string;\n    if (field === 'quantity') items[index].quantity = Number(value);\n    if (field === 'unitCost') items[index].unitCost = Number(value);\n    setNewPurchaseItems(items);\n  };\n\n  const handleAddPurchase = async () => {\n    if (!newPurchaseSupplier || newPurchaseItems.some(item => !item.productName || item.quantity <= 0 || item.unitCost <=0)) {\n      toast({ title: \"Error\", description: \"Please fill all fields for supplier and items.\", variant: \"destructive\" });\n      return;\n    }\n\n    const purchaseData = {\n      items: newPurchaseItems.map(item => ({...item, totalCost: item.quantity * item.unitCost})),\n      supplier: newPurchaseSupplier,\n      totalCost: newPurchaseItems.reduce((sum, item) => sum + (item.quantity * item.unitCost), 0),\n      purchaseDate: new Date().toISOString(),\n    };\n\n    try {\n      // @ts-ignore\n      const result = await recordPurchase(purchaseData); // recordPurchase needs to be defined in actions.ts\n      if (result.success) {\n        toast({ title: \"Success\", description: \"Purchase recorded successfully.\" });\n        // @ts-ignore // Assuming result.purchase exists\n        setPurchases(prev => [...prev, result.purchase]);\n        setIsAddPurchaseDialogOpen(false);\n        // Reset form\n        setNewPurchaseSupplier('');\n        setNewPurchaseItems([{ productName: '', quantity: 1, unitCost: 0 }]);\n      } else {\n        toast({ title: \"Error\", description: result.error || \"Failed to record purchase.\", variant: \"destructive\" });\n      }\n    } catch (error) {\n      toast({ title: \"Error\", description: \"An unexpected error occurred.\", variant: \"destructive\" });\n    }\n  };\n\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n        <h1 className=\"text-3xl font-semibold\">Purchase Records</h1>\n        <div className=\"flex gap-2 w-full sm:w-auto\">\n          <Dialog open={isAddPurchaseDialogOpen} onOpenChange={setIsAddPurchaseDialogOpen}>\n            <DialogTrigger asChild>\n              <Button className=\"w-full sm:w-auto\">\n                <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Purchase\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-2xl\">\n              <DialogHeader>\n                <DialogTitle>Record New Purchase</DialogTitle>\n                <DialogDescription>Enter details for the new purchase order.</DialogDescription>\n              </DialogHeader>\n              <div className=\"grid gap-4 py-4 max-h-[60vh] overflow-y-auto pr-2\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"supplier\">Supplier</Label>\n                  <Input id=\"supplier\" value={newPurchaseSupplier} onChange={(e) => setNewPurchaseSupplier(e.target.value)} placeholder=\"Supplier Name\" />\n                </div>\n                \n                {newPurchaseItems.map((item, index) => (\n                  <div key={index} className=\"grid grid-cols-4 items-end gap-2 border p-2 rounded-md relative\">\n                     <div className=\"col-span-4 sm:col-span-2 grid gap-1\">\n                      <Label htmlFor={`productName-${index}`}>Product Name</Label>\n                      <Input id={`productName-${index}`} value={item.productName} onChange={(e) => handleItemChange(index, 'productName', e.target.value)} placeholder=\"Product Name\" />\n                    </div>\n                    <div className=\"grid gap-1\">\n                      <Label htmlFor={`quantity-${index}`}>Quantity</Label>\n                      <Input id={`quantity-${index}`} type=\"number\" value={item.quantity} onChange={(e) => handleItemChange(index, 'quantity', e.target.value)} placeholder=\"Qty\" />\n                    </div>\n                     <div className=\"grid gap-1\">\n                      <Label htmlFor={`unitCost-${index}`}>Unit Cost</Label>\n                      <Input id={`unitCost-${index}`} type=\"number\" step=\"0.01\" value={item.unitCost} onChange={(e) => handleItemChange(index, 'unitCost', e.target.value)} placeholder=\"Cost\" />\n                    </div>\n                    {newPurchaseItems.length > 1 && (\n                      <Button variant=\"ghost\" size=\"icon\" onClick={() => handleRemoveItemFromPurchase(index)} className=\"absolute top-1 right-1 h-6 w-6 sm:relative sm:top-0 sm:right-0 sm:self-end\">\n                        <Trash2 className=\"h-4 w-4 text-destructive\" />\n                      </Button>\n                    )}\n                  </div>\n                ))}\n                 <Button type=\"button\" variant=\"outline\" onClick={handleAddItemToPurchase} className=\"mt-2\">\n                  <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Another Item\n                </Button>\n              </div>\n              <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setIsAddPurchaseDialogOpen(false)}>Cancel</Button>\n                <Button type=\"button\" onClick={handleAddPurchase}>Save Purchase</Button>\n              </DialogFooter>\n            </DialogContent>\n          </Dialog>\n          <DateRangePicker date={dateRange} onDateChange={setDateRange} />\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"w-full sm:w-auto\">\n                <FileDown className=\"mr-2 h-4 w-4\" /> Export PDF\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuLabel>Select Export Range</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem onSelect={() => handleExportPdf('current_view')}>Current View</DropdownMenuItem>\n              <DropdownMenuItem onSelect={() => handleExportPdf('all_time')}>All Purchases</DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n      \n      <div className=\"relative\">\n        <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n        <Input\n          type=\"search\"\n          placeholder=\"Search purchases by ID, supplier, or product...\"\n          className=\"w-full rounded-lg bg-background pl-8\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Purchases History</CardTitle>\n          <CardDescription>\n            Detailed list of all purchase orders. Filter by date range and search.\n             {dateRange?.from && (\n               <span className=\"block mt-1 text-xs\">\n                 Displaying purchases from {format(dateRange.from, \"LLL dd, y\")}\n                 {dateRange.to && ` to ${format(dateRange.to, \"LLL dd, y\")}`}\n               </span>\n            )}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <p>Loading purchase data...</p>\n          ) : filteredPurchases.length === 0 ? (\n            <div className=\"text-center py-10\">\n              <Truck className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <h3 className=\"mt-2 text-sm font-semibold\">No purchases found</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                 {searchTerm || dateRange ? \"Try adjusting your search or date range.\" : \"No purchases have been recorded yet.\"}\n              </p>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Purchase ID</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead>Supplier</TableHead>\n                  <TableHead>Items</TableHead>\n                  <TableHead>Total Cost</TableHead>\n                  <TableHead>\n                    <span className=\"sr-only\">Actions</span>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredPurchases.map((purchase) => (\n                  <TableRow key={purchase.id}>\n                    <TableCell className=\"font-medium\">{purchase.id}</TableCell>\n                    <TableCell>{format(new Date(purchase.purchaseDate), \"PP\")}</TableCell>\n                    <TableCell>{purchase.supplier}</TableCell>\n                    <TableCell>\n                      {purchase.items.map(item => `${item.productName} (x${item.quantity})`).join(', ')}\n                    </TableCell>\n                    <TableCell>${purchase.totalCost.toFixed(2)}</TableCell>\n                    <TableCell>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                            <Filter className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Toggle menu</span>\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                          <DropdownMenuItem>View Details</DropdownMenuItem>\n                          {/* More actions like Edit/Delete if applicable */}\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}