{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/reports/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { FileText, Download, BarChart3, AlertTriangle, CalendarDays } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport type { Report } from '@/lib/types'; // Assuming Report type includes income statement data\nimport { generateMonthlyReport } from '@/lib/actions'; // Action to generate report\n\n// Mock data for already generated reports (replace with actual data fetching)\nconst mockGeneratedReports: Report[] = [\n  {\n    id: 'report_2024_06',\n    month: 6,\n    year: 2024,\n    salesData: [], // Simplified\n    purchasesData: [], // Simplified\n    incomeStatementData: { revenue: 15000, costOfGoodsSold: 7000, grossProfit: 8000, operatingExpenses: 2500, netIncome: 5500 },\n    generatedAt: new Date(2024, 6, 1).toISOString(),\n    downloadUrl: '/reports/june_2024_summary.pdf',\n  },\n  {\n    id: 'report_2024_05',\n    month: 5,\n    year: 2024,\n    salesData: [],\n    purchasesData: [],\n    incomeStatementData: { revenue: 12500, costOfGoodsSold: 6000, grossProfit: 6500, operatingExpenses: 2200, netIncome: 4300 },\n    generatedAt: new Date(2024, 5, 1).toISOString(),\n    downloadUrl: '/reports/may_2024_summary.pdf',\n  }\n];\n\n\nexport default function ReportsPage() {\n  const [selectedMonth, setSelectedMonth] = useState<string>( (new Date().getMonth()).toString() ); // Default to previous month\n  const [selectedYear, setSelectedYear] = useState<string>(new Date().getFullYear().toString());\n  const [generatedReports, setGeneratedReports] = useState<Report[]>(mockGeneratedReports);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const { toast } = useToast();\n\n  const months = Array.from({ length: 12 }, (_, i) => ({ value: (i + 1).toString(), label: new Date(0, i).toLocaleString('default', { month: 'long' }) }));\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({ length: 5 }, (_, i) => (currentYear - i).toString());\n\n  // Effect to check for end-of-month notification\n  useEffect(() => {\n    const today = new Date();\n    const lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();\n    if (today.getDate() === lastDayOfMonth) {\n      // Check if report for current month & year is already generated\n      const reportExists = generatedReports.some(r => r.month === (today.getMonth() + 1) && r.year === today.getFullYear());\n      if (!reportExists) {\n        toast({\n          title: \"Monthly Report Ready\",\n          description: `The report for ${months[today.getMonth()].label} ${today.getFullYear()} is ready to be generated and downloaded.`,\n          variant: \"default\",\n          duration: 10000, // 10 seconds\n          action: <Button onClick={() => handleGenerateReport()}>Generate Now</Button>\n        });\n      }\n    }\n  }, [generatedReports, months, toast]);\n\n\n  const handleGenerateReport = async () => {\n    setIsGenerating(true);\n    toast({ title: \"Generating Report...\", description: `Compiling data for ${months.find(m=>m.value === selectedMonth)?.label} ${selectedYear}.`});\n    try {\n      // Simulate API call\n      // const reportData = await generateMonthlyReport(parseInt(selectedMonth), parseInt(selectedYear));\n      await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate delay\n      \n      const newReport: Report = {\n        id: `report_${selectedYear}_${selectedMonth.padStart(2, '0')}`,\n        month: parseInt(selectedMonth),\n        year: parseInt(selectedYear),\n        salesData: [], // Populate with actual data\n        purchasesData: [], // Populate with actual data\n        incomeStatementData: { // Placeholder data\n          revenue: Math.random() * 20000 + 5000,\n          costOfGoodsSold: Math.random() * 10000 + 2000,\n          grossProfit: 0, // Will be calculated\n          operatingExpenses: Math.random() * 3000 + 1000,\n          netIncome: 0, // Will be calculated\n        },\n        generatedAt: new Date().toISOString(),\n        downloadUrl: `/reports/report_${selectedYear}_${selectedMonth.padStart(2, '0')}.pdf` // Simulated\n      };\n      newReport.incomeStatementData.grossProfit = newReport.incomeStatementData.revenue - newReport.incomeStatementData.costOfGoodsSold;\n      newReport.incomeStatementData.netIncome = newReport.incomeStatementData.grossProfit - newReport.incomeStatementData.operatingExpenses;\n\n      setGeneratedReports(prev => [newReport, ...prev.filter(r => !(r.month === newReport.month && r.year === newReport.year))]);\n      toast({ title: \"Report Generated\", description: `Report for ${months.find(m=>m.value === selectedMonth)?.label} ${selectedYear} is ready.` });\n    } catch (error) {\n      toast({ title: \"Error Generating Report\", description: \"Could not generate the report. Please try again.\", variant: \"destructive\" });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const handleDownloadReport = (url?: string) => {\n    if (!url) {\n      toast({ title: \"Error\", description: \"Download URL not available.\", variant: \"destructive\"});\n      return;\n    }\n    toast({ title: \"Downloading Report\", description: `Starting download for ${url}...` });\n    // Simulate download\n    window.open(url, '_blank');\n  };\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <h1 className=\"text-3xl font-semibold\">Financial Reports</h1>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Generate Monthly Report</CardTitle>\n          <CardDescription>Select a month and year to compile a comprehensive financial report, including an income statement.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"grid sm:grid-cols-3 gap-4\">\n          <Select value={selectedMonth} onValueChange={setSelectedMonth}>\n            <SelectTrigger id=\"month\" aria-label=\"Select month\">\n              <SelectValue placeholder=\"Select month\" />\n            </SelectTrigger>\n            <SelectContent>\n              {months.map(month => <SelectItem key={month.value} value={month.value}>{month.label}</SelectItem>)}\n            </SelectContent>\n          </Select>\n          <Select value={selectedYear} onValueChange={setSelectedYear}>\n            <SelectTrigger id=\"year\" aria-label=\"Select year\">\n              <SelectValue placeholder=\"Select year\" />\n            </SelectTrigger>\n            <SelectContent>\n              {years.map(year => <SelectItem key={year} value={year}>{year}</SelectItem>)}\n            </SelectContent>\n          </Select>\n          <Button onClick={handleGenerateReport} disabled={isGenerating} className=\"w-full sm:w-auto\">\n            {isGenerating ? 'Generating...' : 'Generate Report'}\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Generated Reports</CardTitle>\n          <CardDescription>Download previously generated monthly reports and income statements.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {generatedReports.length === 0 ? (\n            <div className=\"text-center py-10\">\n              <CalendarDays className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <h3 className=\"mt-2 text-sm font-semibold\">No reports generated yet</h3>\n              <p className=\"mt-1 text-sm text-muted-foreground\">\n                Use the section above to generate your first monthly report.\n              </p>\n            </div>\n          ) : (\n            <ul className=\"space-y-4\">\n              {generatedReports.map(report => (\n                <li key={report.id} className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center p-4 border rounded-lg\">\n                  <div>\n                    <h3 className=\"font-semibold text-lg\">\n                      {months.find(m => m.value === report.month.toString())?.label} {report.year} Report\n                    </h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Generated on: {new Date(report.generatedAt).toLocaleDateString()}\n                    </p>\n                    <div className=\"text-sm mt-1\">\n                      Revenue: ${report.incomeStatementData.revenue.toFixed(2)} | \n                      Net Income: <span className={report.incomeStatementData.netIncome >= 0 ? 'text-accent' : 'text-destructive'}>${report.incomeStatementData.netIncome.toFixed(2)}</span>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2 mt-2 sm:mt-0\">\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => alert(`Displaying income statement for ${report.id}. \\nRevenue: $${report.incomeStatementData.revenue.toFixed(2)}\\nCOGS: $${report.incomeStatementData.costOfGoodsSold.toFixed(2)}\\nGross Profit: $${report.incomeStatementData.grossProfit.toFixed(2)}\\nExpenses: $${report.incomeStatementData.operatingExpenses.toFixed(2)}\\nNet Income: $${report.incomeStatementData.netIncome.toFixed(2)}`)}>\n                      <BarChart3 className=\"mr-2 h-4 w-4\" /> View Income Statement\n                    </Button>\n                    <Button size=\"sm\" onClick={() => handleDownloadReport(report.downloadUrl)} disabled={!report.downloadUrl}>\n                      <Download className=\"mr-2 h-4 w-4\" /> Download PDF\n                    </Button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n        </CardContent>\n      </Card>\n       <Card className=\"mt-6 border-yellow-500 bg-yellow-50 dark:bg-yellow-900/30\">\n        <CardHeader className=\"flex flex-row items-center gap-2\">\n          <AlertTriangle className=\"h-6 w-6 text-yellow-600 dark:text-yellow-400\" />\n          <CardTitle className=\"text-yellow-700 dark:text-yellow-300\">Important Note</CardTitle>\n        </CardHeader>\n        <CardContent className=\"text-yellow-700 dark:text-yellow-400\">\n          <p>Automated end-of-month report compilation and notifications are simulated. In a production environment, this would be handled by a scheduled background task (e.g., cron job or serverless function).</p>\n          <p className=\"mt-2\">The income statement data provided is a simplified skeleton. A comprehensive financial statement would require more detailed expense tracking and accounting practices.</p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAPA;;;;;;;AAWA,8EAA8E;AAC9E,MAAM,uBAAiC;IACrC;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,WAAW,EAAE;QACb,eAAe,EAAE;QACjB,qBAAqB;YAAE,SAAS;YAAO,iBAAiB;YAAM,aAAa;YAAM,mBAAmB;YAAM,WAAW;QAAK;QAC1H,aAAa,IAAI,KAAK,MAAM,GAAG,GAAG,WAAW;QAC7C,aAAa;IACf;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,WAAW,EAAE;QACb,eAAe,EAAE;QACjB,qBAAqB;YAAE,SAAS;YAAO,iBAAiB;YAAM,aAAa;YAAM,mBAAmB;YAAM,WAAW;QAAK;QAC1H,aAAa,IAAI,KAAK,MAAM,GAAG,GAAG,WAAW;QAC7C,aAAa;IACf;CACD;AAGc,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,AAAC,IAAI,OAAO,QAAQ,GAAI,QAAQ,KAAM,4BAA4B;IAC9H,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,IAAI,OAAO,WAAW,GAAG,QAAQ;IAC1F,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;IACnE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,SAAS,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAG,GAAG,CAAC,GAAG,IAAM,CAAC;YAAE,OAAO,CAAC,IAAI,CAAC,EAAE,QAAQ;YAAI,OAAO,IAAI,KAAK,GAAG,GAAG,cAAc,CAAC,WAAW;gBAAE,OAAO;YAAO;QAAG,CAAC;IACtJ,MAAM,cAAc,IAAI,OAAO,WAAW;IAC1C,MAAM,QAAQ,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GAAG,CAAC,GAAG,IAAM,CAAC,cAAc,CAAC,EAAE,QAAQ;IAE5E,gDAAgD;IAChD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM,QAAQ,IAAI;YAClB,MAAM,iBAAiB,IAAI,KAAK,MAAM,WAAW,IAAI,MAAM,QAAQ,KAAK,GAAG,GAAG,OAAO;YACrF,IAAI,MAAM,OAAO,OAAO,gBAAgB;gBACtC,gEAAgE;gBAChE,MAAM,eAAe,iBAAiB,IAAI;0DAAC,CAAA,IAAK,EAAE,KAAK,KAAM,MAAM,QAAQ,KAAK,KAAM,EAAE,IAAI,KAAK,MAAM,WAAW;;gBAClH,IAAI,CAAC,cAAc;oBACjB,MAAM;wBACJ,OAAO;wBACP,aAAa,CAAC,eAAe,EAAE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,WAAW,GAAG,yCAAyC,CAAC;wBAC/H,SAAS;wBACT,UAAU;wBACV,sBAAQ,6LAAC,qIAAA,CAAA,SAAM;4BAAC,OAAO;yDAAE,IAAM;;sCAAwB;;;;;;oBACzD;gBACF;YACF;QACF;gCAAG;QAAC;QAAkB;QAAQ;KAAM;IAGpC,MAAM,uBAAuB;QAC3B,gBAAgB;QAChB,MAAM;YAAE,OAAO;YAAwB,aAAa,CAAC,mBAAmB,EAAE,OAAO,IAAI,CAAC,CAAA,IAAG,EAAE,KAAK,KAAK,gBAAgB,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC;QAAA;QAC7I,IAAI;YACF,oBAAoB;YACpB,mGAAmG;YACnG,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,QAAQ,iBAAiB;YAE1E,MAAM,YAAoB;gBACxB,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,EAAE,cAAc,QAAQ,CAAC,GAAG,MAAM;gBAC9D,OAAO,SAAS;gBAChB,MAAM,SAAS;gBACf,WAAW,EAAE;gBACb,eAAe,EAAE;gBACjB,qBAAqB;oBACnB,SAAS,KAAK,MAAM,KAAK,QAAQ;oBACjC,iBAAiB,KAAK,MAAM,KAAK,QAAQ;oBACzC,aAAa;oBACb,mBAAmB,KAAK,MAAM,KAAK,OAAO;oBAC1C,WAAW;gBACb;gBACA,aAAa,IAAI,OAAO,WAAW;gBACnC,aAAa,CAAC,gBAAgB,EAAE,aAAa,CAAC,EAAE,cAAc,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,YAAY;YACnG;YACA,UAAU,mBAAmB,CAAC,WAAW,GAAG,UAAU,mBAAmB,CAAC,OAAO,GAAG,UAAU,mBAAmB,CAAC,eAAe;YACjI,UAAU,mBAAmB,CAAC,SAAS,GAAG,UAAU,mBAAmB,CAAC,WAAW,GAAG,UAAU,mBAAmB,CAAC,iBAAiB;YAErI,oBAAoB,CAAA,OAAQ;oBAAC;uBAAc,KAAK,MAAM,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,KAAK,KAAK,UAAU,KAAK,IAAI,EAAE,IAAI,KAAK,UAAU,IAAI;iBAAG;YACzH,MAAM;gBAAE,OAAO;gBAAoB,aAAa,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,CAAA,IAAG,EAAE,KAAK,KAAK,gBAAgB,MAAM,CAAC,EAAE,aAAa,UAAU,CAAC;YAAC;QAC7I,EAAE,OAAO,OAAO;YACd,MAAM;gBAAE,OAAO;gBAA2B,aAAa;gBAAoD,SAAS;YAAc;QACpI,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,uBAAuB,CAAC;QAC5B,IAAI,CAAC,KAAK;YACR,MAAM;gBAAE,OAAO;gBAAS,aAAa;gBAA+B,SAAS;YAAa;YAC1F;QACF;QACA,MAAM;YAAE,OAAO;YAAsB,aAAa,CAAC,sBAAsB,EAAE,IAAI,GAAG,CAAC;QAAC;QACpF,oBAAoB;QACpB,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAyB;;;;;;0BAEvC,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAEnB,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC,qIAAA,CAAA,SAAM;gCAAC,OAAO;gCAAe,eAAe;;kDAC3C,6LAAC,qIAAA,CAAA,gBAAa;wCAAC,IAAG;wCAAQ,cAAW;kDACnC,cAAA,6LAAC,qIAAA,CAAA,cAAW;4CAAC,aAAY;;;;;;;;;;;kDAE3B,6LAAC,qIAAA,CAAA,gBAAa;kDACX,OAAO,GAAG,CAAC,CAAA,sBAAS,6LAAC,qIAAA,CAAA,aAAU;gDAAmB,OAAO,MAAM,KAAK;0DAAG,MAAM,KAAK;+CAA7C,MAAM,KAAK;;;;;;;;;;;;;;;;0CAGrD,6LAAC,qIAAA,CAAA,SAAM;gCAAC,OAAO;gCAAc,eAAe;;kDAC1C,6LAAC,qIAAA,CAAA,gBAAa;wCAAC,IAAG;wCAAO,cAAW;kDAClC,cAAA,6LAAC,qIAAA,CAAA,cAAW;4CAAC,aAAY;;;;;;;;;;;kDAE3B,6LAAC,qIAAA,CAAA,gBAAa;kDACX,MAAM,GAAG,CAAC,CAAA,qBAAQ,6LAAC,qIAAA,CAAA,aAAU;gDAAY,OAAO;0DAAO;+CAApB;;;;;;;;;;;;;;;;0CAGxC,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAsB,UAAU;gCAAc,WAAU;0CACtE,eAAe,kBAAkB;;;;;;;;;;;;;;;;;;0BAKxC,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAEnB,6LAAC,mIAAA,CAAA,cAAW;kCACT,iBAAiB,MAAM,KAAK,kBAC3B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,yNAAA,CAAA,eAAY;oCAAC,WAAU;;;;;;8CACxB,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAE,WAAU;8CAAqC;;;;;;;;;;;iDAKpD,6LAAC;4BAAG,WAAU;sCACX,iBAAiB,GAAG,CAAC,CAAA,uBACpB,6LAAC;oCAAmB,WAAU;;sDAC5B,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;;wDACX,OAAO,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,OAAO,KAAK,CAAC,QAAQ,KAAK;wDAAM;wDAAE,OAAO,IAAI;wDAAC;;;;;;;8DAE9E,6LAAC;oDAAE,WAAU;;wDAAgC;wDAC5B,IAAI,KAAK,OAAO,WAAW,EAAE,kBAAkB;;;;;;;8DAEhE,6LAAC;oDAAI,WAAU;;wDAAe;wDACjB,OAAO,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC;wDAAG;sEAC7C,6LAAC;4DAAK,WAAW,OAAO,mBAAmB,CAAC,SAAS,IAAI,IAAI,gBAAgB;;gEAAoB;gEAAE,OAAO,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;;sDAGhK,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,qIAAA,CAAA,SAAM;oDAAC,SAAQ;oDAAU,MAAK;oDAAK,SAAS,IAAM,MAAM,CAAC,gCAAgC,EAAE,OAAO,EAAE,CAAC,cAAc,EAAE,OAAO,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,SAAS,EAAE,OAAO,mBAAmB,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,iBAAiB,EAAE,OAAO,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,aAAa,EAAE,OAAO,mBAAmB,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,eAAe,EAAE,OAAO,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI;;sEACjb,6LAAC,qNAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;8DAExC,6LAAC,qIAAA,CAAA,SAAM;oDAAC,MAAK;oDAAK,SAAS,IAAM,qBAAqB,OAAO,WAAW;oDAAG,UAAU,CAAC,OAAO,WAAW;;sEACtG,6LAAC,6MAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;;;;;;;;mCAlBlC,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;0BA2B3B,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACf,6LAAC,mIAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,6LAAC,2NAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAuC;;;;;;;;;;;;kCAE9D,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC;0CAAE;;;;;;0CACH,6LAAC;gCAAE,WAAU;0CAAO;;;;;;;;;;;;;;;;;;;;;;;;AAK9B;GArKwB;;QAKJ,+HAAA,CAAA,WAAQ;;;KALJ","debugId":null}}]
}